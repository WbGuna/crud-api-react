{"ast":null,"code":"var _jsxFileName = \"/home/wabarbosa/\\xC1rea de Trabalho/Quero_ser_Dev/Atividades Jonas/crud-api-react/crud-api-react/src/pages/ListCustomer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './TodoList.css';\nimport { AiFillCheckCircle } from \"react-icons/ai\";\nimport { Container, ListGroup, Row, Col, Button, Modal, Alert, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListCustomer(props) {\n  _s();\n\n  const [states, setStates] = useState([]);\n  const [customer, setCustomer] = useState(customerModel); // const [name, setName] = useState('')\n  // const [age, setAge] = useState('')\n  // const [document, setDocument] = useState('')\n  // const [tel, setTel] = useState('')\n  // const [state, setState] = useState('')\n\n  const [successRegister, SetSuccessRegister] = useState(false);\n\n  const getStates = () => {\n    axios.get('http://localhost:8080/states').then(response => {\n      setStates(response.data);\n    });\n  };\n\n  const register = () => {\n    axios.post('http://localhost:8080/customer', customer).then(response => {\n      SetSuccessRegister(true);\n    });\n  }; // const register = () => {\n  //     let customer = {\n  //         name: name,\n  //         age: age,\n  //         document: document,\n  //         tel: tel,\n  //         state: state,\n  //     }\n  // \n  //     axios.post('http://localhost:8080/customer', customer)\n  //         .then((response) => {\n  //             SetSuccessRegister(true)\n  //         })\n  // }\n\n\n  useEffect(() => {\n    getStates();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Cadastro de Usu\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Nome:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: customer.name,\n                onChange: event => {\n                  setCustomer({ ...customer,\n                    name: event.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"age\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Idade:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: customer.age,\n                onChange: event => {\n                  setCustomer({ ...customer,\n                    age: event.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"document\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"CPF:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: customer.document,\n                onChange: event => {\n                  setCustomer({ ...customer,\n                    document: event.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"tel\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Telefone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: customer.tel,\n                onChange: event => {\n                  setCustomer({ ...customer,\n                    tel: event.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                onChange: event => {\n                  setCustomer({ ...customer,\n                    state: event.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"Selecione um estado\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this), states.map(item => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.id,\n                    children: item.name\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 53\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), successRegister ? /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Usu\\xE1rio cadastrado com sucesso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 52\n            }, this) : '', /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              className: \"my-5\",\n              onClick: register,\n              children: \"Success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListCustomer, \"Jw6Keo9poQ78VlDlEY/WiQCrCz4=\");\n\n_c = ListCustomer;\nexport default ListCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCustomer\");","map":{"version":3,"names":["React","useState","AiFillCheckCircle","Container","ListGroup","Row","Col","Button","Modal","Alert","Form","ListCustomer","props","states","setStates","customer","setCustomer","customerModel","successRegister","SetSuccessRegister","getStates","axios","get","then","response","data","register","post","useEffect","name","event","target","value","age","document","tel","state","map","item","id"],"sources":["/home/wabarbosa/√Årea de Trabalho/Quero_ser_Dev/Atividades Jonas/crud-api-react/crud-api-react/src/pages/ListCustomer/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './TodoList.css'\nimport { AiFillCheckCircle } from \"react-icons/ai\";\nimport { Container, ListGroup, Row, \n        Col, Button, Modal, \n        Alert, Form } from 'react-bootstrap'\n\nfunction ListCustomer(props) {\n\n\n\n        const [states, setStates] = useState([])\n        const [customer, setCustomer] = useState(customerModel)\n        // const [name, setName] = useState('')\n        // const [age, setAge] = useState('')\n        // const [document, setDocument] = useState('')\n        // const [tel, setTel] = useState('')\n        // const [state, setState] = useState('')\n        const [successRegister, SetSuccessRegister] = useState(false)\n    \n        const getStates = () => {\n            axios.get('http://localhost:8080/states')\n                .then((response) => {\n                    setStates(response.data)\n                })\n        }\n    \n        const register = () => {\n            axios.post('http://localhost:8080/customer', customer)\n                .then((response) => {\n                    SetSuccessRegister(true)\n                })\n        }\n    \n        // const register = () => {\n    \n        //     let customer = {\n        //         name: name,\n        //         age: age,\n        //         document: document,\n        //         tel: tel,\n        //         state: state,\n        //     }\n        // \n        //     axios.post('http://localhost:8080/customer', customer)\n        //         .then((response) => {\n        //             SetSuccessRegister(true)\n        //         })\n        // }\n    \n        useEffect(() => {\n            getStates()\n        }, [])\n    \n        return (\n            <>\n                <Header />\n                <Container>\n                    <Row>\n                        <Col><h1>Cadastro de Usu√°rio</h1></Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form>\n                                <Form.Group className=\"mb-3\" controlId=\"name\">\n                                    <Form.Label>Nome:</Form.Label>\n                                    <Form.Control type=\"text\"\n                                        value={customer.name}\n                                        onChange={(event) => { setCustomer({...customer, name: event.target.value}) }} />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"age\">\n                                    <Form.Label>Idade:</Form.Label>\n                                    <Form.Control type=\"text\"\n                                        value={customer.age}\n                                        onChange={(event) => { setCustomer({...customer, age: event.target.value}) }} />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"document\">\n                                    <Form.Label>CPF:</Form.Label>\n                                    <Form.Control type=\"text\"\n                                        value={customer.document}\n                                        onChange={(event) => { setCustomer({...customer, document: event.target.value}) }} />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"tel\">\n                                    <Form.Label>Telefone:</Form.Label>\n                                    <Form.Control type=\"text\"\n                                        value={customer.tel}\n                                        onChange={(event) => { setCustomer({...customer, tel: event.target.value}) }} />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Estado</Form.Label>\n                                    <Form.Select\n                                        onChange={(event) => { setCustomer({...customer, state: event.target.value}) }}>\n                                        <option>Selecione um estado</option>\n                                        {\n                                            states.map((item) => {\n                                                return (\n                                                    <option key={item.id} value={item.id}>{item.name}</option>\n                                                )\n                                            })\n                                        }\n                                    </Form.Select>\n                                </Form.Group>\n                                {successRegister ? <h3>Usu√°rio cadastrado com sucesso</h3> : ''}\n                                <Button variant=\"success\" className=\"my-5\" onClick={register}>Success</Button>\n                            </Form>\n    \n    \n    \n    \n    \n    \n                            {/* <Form>\n                                <Form.Group className=\"mb-3\" controlId=\"name\">\n                                    <Form.Label>Nome:</Form.Label>\n                                    <Form.Control type=\"text\" \n                                        value={name}\n                                        onChange={(event)=>{setName(event.target.value)}} />\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"age\">\n                                    <Form.Label>Idade:</Form.Label>\n                                    <Form.Control type=\"text\" \n                                        value={age}\n                                        onChange={(event)=>{setAge(event.target.value)}}/>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"document\">\n                                    <Form.Label>CPF:</Form.Label>\n                                    <Form.Control type=\"text\"  \n                                        value={document}\n                                       onChange={(event)=>{setDocument(event.target.value)}}/>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"tel\">\n                                    <Form.Label>Telefone:</Form.Label>\n                                    <Form.Control type=\"text\"\n                                        value={tel}  \n                                        onChange={(event)=>{setTel(event.target.value)}}/>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label>Estado</Form.Label>\n                                    <Form.Select \n                                         onChange={(event)=>{setState(event.target.value)}}>\n                                             <option>Selecione um estado</option>\n                                        {\n                                            states.map((item)=>{\n                                                return (\n                                                    <option key={item.id} value={item.id}>{item.name}</option>\n                                                )\n                                            })\n                                        }\n                                    </Form.Select>\n                                </Form.Group>\n                                {successRegister ? <h3>Usu√°rio cadastrado com sucesso</h3> : ''}\n                                <Button variant=\"success\" className=\"my-5\" onClick={register}>Success</Button>\n                            </Form> */}\n                        </Col>\n                    </Row>\n                </Container>\n    \n            </>\n        )\n    }\n    \n \n\nexport default ListCustomer"],"mappings":"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"},"metadata":{},"sourceType":"module"}