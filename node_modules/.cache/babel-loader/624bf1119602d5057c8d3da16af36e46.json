{"ast":null,"code":"var _jsxFileName = \"/home/wabarbosa/\\xC1rea de Trabalho/Quero_ser_Dev/Atividades Jonas/crud-api-react/crud-api-react/src/components/Todo/Form/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport './TodoForm.css'; // import { taskModel } from '../../../models'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  // const [task, setTask] = useState(taskModel)\n  const [description, setDescription] = useState('');\n\n  const submitEnter = event => {\n    if (event.key === 'Enter') {\n      submit();\n    } else if (event.key === 'Escape') {\n      setDescription(''); // setTask(taskModel)\n    }\n  };\n\n  const submit = () => {\n    props.register(description);\n    setDescription(''); // setTask(taskModel)\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitEnter,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"row-form mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Tarefa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Digite a tarefa\",\n                onChange: event => {\n                  setDescription(event.target.value);\n                },\n                value: description,\n                onKeyUp: submitEnter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-submit\",\n              variant: \"primary\",\n              onClick: () => submit(),\n              children: \"cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TodoForm, \"T5v5dRzedMK18tfGxj2rihBX8Sg=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","Form","Button","Container","Row","Col","TodoForm","props","description","setDescription","submitEnter","event","key","submit","register","target","value"],"sources":["/home/wabarbosa/Área de Trabalho/Quero_ser_Dev/Atividades Jonas/crud-api-react/crud-api-react/src/components/Todo/Form/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap'\nimport './TodoForm.css'\n// import { taskModel } from '../../../models'\n\nfunction TodoForm(props) {\n\n    // const [task, setTask] = useState(taskModel)\n    const [description, setDescription] = useState('')\n\n    const submitEnter = (event) => {\n        if (event.key === 'Enter') {\n            submit()\n        } else if (event.key === 'Escape') {\n            setDescription('')\n            // setTask(taskModel)\n        }\n    }\n\n    const submit = () => {\n        props.register(description)\n        setDescription('')\n        // setTask(taskModel)\n    }\n\n    return(\n        <>\n            <Container>\n                <Form onSubmit={submitEnter}>\n                    <Row className='row-form mb-5'>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Tarefa</Form.Label>\n                                <Form.Control type=\"text\" \n                                    placeholder=\"Digite a tarefa\"\n                                    onChange={event => {setDescription(event.target.value)}}\n                                    value={description}\n                                    onKeyUp={submitEnter}/>\n                                {/* <Form.Control type=\"text\" \n                                    placeholder=\"Digite a tarefa\"\n                                    onChange={event => {\n                                        setTask({\n                                            ...task,\n                                            description: event.target.value})\n                                    }}\n                                    value={task.description}\n                                    onKeyUp={submitEnter}/> */}\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Button className=\"btn-submit\" variant=\"primary\" onClick={() => submit()}>\n                                cadastrar\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </>\n    )\n}\n\nexport default TodoForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,GAAlC,EAAuCC,GAAvC,QAAkD,iBAAlD;AACA,OAAO,gBAAP,C,CACA;;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAErB;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMU,WAAW,GAAIC,KAAD,IAAW;IAC3B,IAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;MACvBC,MAAM;IACT,CAFD,MAEO,IAAIF,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;MAC/BH,cAAc,CAAC,EAAD,CAAd,CAD+B,CAE/B;IACH;EACJ,CAPD;;EASA,MAAMI,MAAM,GAAG,MAAM;IACjBN,KAAK,CAACO,QAAN,CAAeN,WAAf;IACAC,cAAc,CAAC,EAAD,CAAd,CAFiB,CAGjB;EACH,CAJD;;EAMA,oBACI;IAAA,uBACI,QAAC,SAAD;MAAA,uBACI,QAAC,IAAD;QAAM,QAAQ,EAAEC,WAAhB;QAAA,uBACI,QAAC,GAAD;UAAK,SAAS,EAAC,eAAf;UAAA,wBACI,QAAC,GAAD;YAAA,uBACI,QAAC,IAAD,CAAM,KAAN;cAAA,wBACI,QAAC,IAAD,CAAM,KAAN;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;gBAAc,IAAI,EAAC,MAAnB;gBACI,WAAW,EAAC,iBADhB;gBAEI,QAAQ,EAAEC,KAAK,IAAI;kBAACF,cAAc,CAACE,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAd;gBAAmC,CAF3D;gBAGI,KAAK,EAAER,WAHX;gBAII,OAAO,EAAEE;cAJb;gBAAA;gBAAA;gBAAA;cAAA,QAFJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAoBI,QAAC,GAAD;YAAA,uBACI,QAAC,MAAD;cAAQ,SAAS,EAAC,YAAlB;cAA+B,OAAO,EAAC,SAAvC;cAAiD,OAAO,EAAE,MAAMG,MAAM,EAAtE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QApBJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAkCH;;GAtDQP,Q;;KAAAA,Q;AAwDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}