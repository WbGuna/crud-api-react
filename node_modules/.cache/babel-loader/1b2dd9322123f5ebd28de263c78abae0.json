{"ast":null,"code":"var _jsxFileName = \"/home/wabarbosa/\\xC1rea de Trabalho/Quero_ser_Dev/Atividades Jonas/crud-api-react/crud-api-react/src/components/cliente/CustomerList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './TodoList.css';\nimport { AiFillCheckCircle } from \"react-icons/ai\";\nimport { Container, ListGroup, Row, Col, Button, Modal, Alert, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomerList(props) {\n  _s();\n\n  const tasks = props.tasks || [];\n  const [task, setTask] = useState({});\n  const [show, setShow] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n  const [successDelete, setSuccessDelete] = useState(false);\n\n  const handleCloseEdit = () => setShowEdit(false);\n\n  const handleShowEdit = () => setShowEdit(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const taskDone = task => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: task.done ? 'success' : 'info',\n      onClick: () => {\n        task.done ? props.peddingTask(task) : props.doneTask(task);\n      },\n      children: task.done ? 'Concluído' : 'Concluir'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderTask = () => {\n    return tasks.map(user => {\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"itemTask\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 6,\n            md: 8,\n            children: [user.name, \" - \", user.age, \" - \", user.tel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/editcustomer` + user.id,\n              children: \"EditCustomer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"mx-3\",\n              variant: \"secondary\",\n              onClick: () => {\n                setCliente(user);\n                handleShowEdit();\n              },\n              children: \"Deletar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [successDelete ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: [/*#__PURE__*/_jsxDEV(AiFillCheckCircle, {\n        size: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), \" Item apagado com suceso\"]\n    }, 'success', true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this) : '', /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: renderCliente()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showEdit,\n      onHide: handleCloseEdit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Excluir Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [\"Deseja deletar o Cliente: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: cliente.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseEdit,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: () => {\n            props.delete(cliente.id);\n            handleCloseEdit();\n            setSuccessDelete(true);\n            setTimeout(() => {\n              setSuccessDelete(false);\n            }, 3000);\n          },\n          children: \"Apagar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomerList, \"akMSUeRuDUnW2A6X6h0a06cOVYM=\");\n\n_c = CustomerList;\nexport default CustomerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useState","AiFillCheckCircle","Container","ListGroup","Row","Col","Button","Modal","Alert","Form","CustomerList","props","tasks","task","setTask","show","setShow","showEdit","setShowEdit","successDelete","setSuccessDelete","handleCloseEdit","handleShowEdit","handleClose","handleShow","taskDone","done","peddingTask","doneTask","renderTask","map","user","name","age","tel","id","setCliente","renderCliente","cliente","delete","setTimeout"],"sources":["/home/wabarbosa/Área de Trabalho/Quero_ser_Dev/Atividades Jonas/crud-api-react/crud-api-react/src/components/cliente/CustomerList.js"],"sourcesContent":["import React, { useState } from 'react'\nimport './TodoList.css'\nimport { AiFillCheckCircle } from \"react-icons/ai\";\nimport { Container, ListGroup, Row, \n        Col, Button, Modal, \n        Alert, Form } from 'react-bootstrap'\n\nfunction CustomerList(props) {\n\n    const tasks = props.tasks || []\n    const [task, setTask] = useState({});\n    const [show, setShow] = useState(false);\n    const [showEdit, setShowEdit] = useState(false);\n    const [successDelete, setSuccessDelete] = useState(false);\n\n    const handleCloseEdit = () => setShowEdit(false);\n    const handleShowEdit = () => setShowEdit(true);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const taskDone = (task) => {\n        return (\n            <Button variant={task.done ? 'success' : 'info'}\n                onClick={() => { task.done ? props.peddingTask(task) : props.doneTask(task) }}>\n                {task.done ? 'Concluído' : 'Concluir'}\n            </Button>\n        )\n    }\n\n    const renderTask = () => {\n        return tasks.map((user) => {\n            return (\n                <ListGroup.Item key={user.id}>\n                    <Row className=\"itemTask\">\n                        <Col xs={6} md={8}>\n                            {user.name} - {user.age} - {user.tel}\n                        </Col>\n                        <Col>\n                            <Link to={`/editcustomer` + user.id}>EditCustomer</Link>\n                            <Button className=\"mx-3\" variant=\"secondary\"\n                                onClick={() => {\n                                    setCliente(user)\n                                    handleShowEdit()\n                                }}>\n                                Deletar\n                            </Button>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            )\n        })\n    }\n\n    return (\n        <Container>\n            {\n                successDelete\n                    ?\n                    <Alert key='success' variant='success'>\n                        <AiFillCheckCircle size=\"30\" /> Item apagado com suceso\n                    </Alert>\n                    :\n                    ''\n            }\n\n            <Row>\n                <Col>\n                    <ListGroup variant=\"flush\">\n                        {renderCliente()}\n                    </ListGroup>\n                </Col>\n            </Row>\n\n            {/* //modal delete */}\n            <Modal show={showEdit} onHide={handleCloseEdit}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Excluir Cliente</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Deseja deletar o Cliente: <strong>{cliente.name}</strong>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseEdit}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={() => {\n                        props.delete(cliente.id)\n                        handleCloseEdit()\n                        setSuccessDelete(true)\n                        setTimeout(() => {\n                            setSuccessDelete(false)\n                        }, 3000)\n                        }\n                    }>\n                        Apagar\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            {/* //modal delete */}\n        </Container>\n    )\n}\n\nexport default CustomerList"],"mappings":"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"},"metadata":{},"sourceType":"module"}